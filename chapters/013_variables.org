#+TITLE: 变量
#+AUTHOR: aborn
#+DATE: 2018-05-18
#+EMAIL: aborn.jiang@gmail.com
#+LANGUAGE: zh
#+LATEX_HEADER: \usepackage{xeCJK}

#+SETUPFILE: ~/github/org-html-themes/setup/theme-readtheorg.setup

-----

* 变量
  变量在程序中是一种标识符，其指向某个值，这是一个很通用的编辑概念，不需要做过多解析。在Lisp中，
  每个变量都通过符号类型来表达。变量名就是对应的符号类型名，变量值是保存在符号类型的值单元(value cell)里。
  注意在前一章节里，我们介绍到符号类型既可用于变量名也可用于函数名，它们是相互独立不冲突的。

* 全局变量
  全局变量在任意时刻都只有一个值，并且这个变量可使用于整个lisp运行环境。我们经常用 *setq* 这个
  特殊表达式将一个值绑定到具体某个符号变量中，如下：
  #+BEGIN_SRC emacs-lisp
  (setq x '(a b))
  #+END_SRC
  这里setq是一个特殊表达式，所以它不会对第一个参数x进行求值，它会对第二个参数进行求值，然后将求
  得的值绑定到第一个参数对应的变量中。

** 不变量
   在Emacs Lisp中，某些符号类型的求值是其本身。最常见的如nil、t，以及以:开头的符号类型（这些
   符号类型称之为关键字keywords）。这些特殊的变量不能再进行绑定，同时其值也无法进行修改。

   #+BEGIN_SRC emacs-lisp
   (keywordp object)
   #+END_SRC
   用来判断一个对象是否为关键字类型(keywords)，即以:开头的符号类型。

** 定义全局变量

   定义全局变量采用
   *defvar* 关键字，它定义一个符号类型为变量。

   #+BEGIN_SRC emacs-lisp
  defvar symbol [value [doc-string]]
   #+END_SRC

   还有一种方式，采用 *defconst* 关键字
   #+BEGIN_SRC emacs-lisp
  defconst symbol value [doc-string]
   #+END_SRC


* 局部变量
  局部变量一般只用于一段程序，最常用的声明方式是采用 *let* 关键字。它的定义格式如下：

  #+BEGIN_SRC emacs-lisp
  let (bindings. . . ) forms. . .
  #+END_SRC
  这里的let是一个特殊表达式(Special Forms)，它按顺序绑定局部变量。下面是一个例子:
  #+BEGIN_SRC emacs-lisp
  (let ((y 1)
        (z y))
     (list y z))  ;; ⇒ (1 2)
  #+END_SRC
  还有一种局部变量，即函数的调用参数，因为这些参数只用于函数调用阶段。

* Buffer本地变量(Buffer-Local Variables)
  Buffer本地变量，从字面意思可以看出，这种类型的变量只应用于Buffer中。这种机制可以满足对于同一
  个变量在不同的Buffer中的值不一样。

* 文件本地变量(File-Local Variables)
