#+TITLE: emacs实践笔记
#+AUTHOR: aborn
#+DATE: 2016-11-20 09:26
#+EMAIL: aborn.jiang@gmail.com
#+LANGUAGE: zh
#+LATEX_HEADER: \usepackage{xeCJK}

#+SETUPFILE: ~/github/org-html-themes/setup/theme-readtheorg.setup-----

* emacs的书签功能
emacs的书签用于记录你在文件中的阅读位置。它有点类似寄存器，跟寄存器一样，因为它也能记录位置位置。
但同寄存器有两点不一样：1. 它有比较长的名字; 2. 当emacs关闭的时候，它会自动持久化到
磁盘。

** 设置一个书签
当我们阅读一个很长的文档，没能一口气读完时。我们希望记住当前文档的最后阅读的位置，以便下次再用emacs
阅读的时候能快速地定位到。那么，我们设置一个书签，通过
 *bookmark-set* 对应快捷键为 *C-x r m*

** 列出保存的书签
 *bookmark-bmenu-list* 对应快捷键为 *C-x r l* ，它将打开一个*Bookmark List*的buffer同时
列出所有保存的书签。

*** 书签列表*Bookmark List*
在*Bookmark List*这个buffer里，有以下快捷键可以使用：
- a 显示当前书签的标注信息;
- A 在另一个buffer中显示所有书签的所有标注信息;
- d 标记书签，以便用来删除 (x – 执行删除);
- e 编辑当前书签的标注信息;
- m 标记书签，以便用于进一步显示和其他操作 (v – 访问这个书签);
- o 选中当前书签，并显示在另一个window中;
- C-o 在另一个window中切换到当前这个书签;
- r 重命名当前书签;
- w 将当前书签的位置显示在minibuffer里。

** 跳转到一个书签
使用 *bookmark-jump* 函数，可以跳转到一个特定的书签，它绑定的快捷键为 *C-x r b* 。
如果你的emacs中安装了[[https://github.com/emacs-helm/helm][helm]] 这个插件，你也可以使用 *helm-bookmarks* 这个命令
来快速查找书签，并跳转到书签位置。

*** helm-bookmarks
通过helm-bookmarks命令来查找并跳转书签如下图：

[[./images/bookmark.png]]

*** 修改默认排序
书签查找和跳转的时候，默认的书签排序是按字母排序的。如果想将最近访问的书签放在最前面，
将下面代码添加到你的emacs配置文件中。
#+NAME: 修改默认排序
#+BEGIN_SRC emacs-lisp
(defadvice bookmark-jump (after bookmark-jump activate)
  (let ((latest (bookmark-get-bookmark bookmark)))
    (setq bookmark-alist (delq latest bookmark-alist))
    (add-to-list 'bookmark-alist latest)))
#+END_SRC

** 删除一个书签
删除一个书签对应的命令为 *bookmark-delete* 。

** 保存书签
最新版本emacs（老版本的书签保存在 *~/.emacs.bmk* ），
在退出的时候会自动保存书签。如果想手动保存书签的话，可以采用
 *bookmark-save* 这个函数命令。默认的情况，emacs会将书签保存在 *bookmark-default-file*
变量对应的文件中。在我的机器中，对应的文件如下：
#+NAME: 书签文件路径
#+BEGIN_SRC emacs-lisp
ELISP> bookmark-default-file
"/Users/aborn/.emacs.d/.cache/bookmarks"
ELISP>
#+END_SRC

** 其他设置
有一个变量 *bookmark-save-flag* 。如果这个变量的值为一个数值，它表示修改（或新增）
多少次书签后，emacs会自动保存书签到磁盘。当这个变量的值被设置为1时，每次对bookmark的改
动，emacs就会自动保存内容到磁盘相应位置（这样可以防止emacs突然crash时bookmark的丢失）。
如果这个值设置为nil，表示emacs不会主动保存bookmark，除非用户手动调用
*M-x bookmark-save* 。

** bookmark+
[[https://www.emacswiki.org/emacs/bookmark+.el][bookmark+]] 是对bookmark的一个扩展的包。它有更多的功能：
1. 原始的bookmark只能对文件位置记录，bookmark+对孤立的buffer(没有关联文件的buffer)也能保存书签;
2. 支持对书签进行打tag;
3. 对文档的某个区域保存为书签，而不仅仅是某个位置;
4. 记录了每个书签的访问次数，及最后一次的访问时间，可以基于它们排序;
5. 多个书签可以有相同的名字;
6. 可以对函数、变量等加书签。
更多功能请参考: https://www.emacswiki.org/emacs/BookmarkPlus#Bookmark%2b

* dired模式
dired的全称为Directory Edit，即目录编辑，是一个非常老的模式。
* 常用命令
** 移动命令
 *n* 下移
 *p* 上移
** 编辑命令
 *R* 重命名或者移动文件
 *D* 删除文件或者目录
 *+* 创建目录
 *Z* gzip压缩文件
** 其他命令
 *RET* 打开文件或者目录
 *q*   退出


* org-capture.el
Org 8.0 以后版本采用org-capture.el取代原有的org-remember.el

* magit模式简介
magit是emacs下版本管理的强大武器

* 常用命令
+ *magit-diff* 相当于git diff, 当进入diff-buffer后按 /g/ 更新之
+ *magit-status* 相当于git status, 进入status-buffer后按s添加文件或文件夹到本地仓库
+ *magit-branch-delete* 删除本地分支
+ *magit-checkout* 切换分支
+ *magit-branch-and-checkout* 从当前分支切一个新的分支

* org模式简介
Emacs的org-mode可用于记笔记、管理自己的待办事项(TODO lists)，同时，也可用于管理项目。它是一个高效的纯文本编辑系统。

* 文档结构
Org是基于Outline-mode，并提供灵活的命令编辑结构化的文档。其文档结构语法跟markdown很类似。
** 目录结构
Org的目录结构在每行最左边以星号标记，星号越多，标题层级越深。下面是一些例子：

#+BEGIN_EXAMPLE
\* 一级目录
\** 二级目录
\*** 三级目录

\* 另一个一级目录
#+END_EXAMPLE

** 显示与隐藏
目录结构下的内容可以隐藏起来，通常用采用 *TAB* 和 /S-TAB/ 这两个命令来切换。

** 列表
Org提供三种类型的列表：有序列表、无序列表和描述列表
1. 有序列表以'1.' 或者 '1)'
2. 无序列表以'-', '+' 或者 '*'
3. 描述列表

** 块结构
在Org文档中，加入代码块这种类型的块结构，都是采用begin...end这种模式，下面是一个例子：

#+BEGIN_EXAMPLE
\#+BEGIN_EXAMPLE
\#+END_EXAMPLE
#+END_EXAMPLE

* 表格
* 超链接
Org模式提供了比较好用的超链接方式，可以链接到普通网页、文件、email等。
** 链接格式
Org模式支持两种链接，即，内部链接和外部链接。它们有相同的格式：
#+BEGIN_EXAMPLE
[[链接][描述]]  或 当只有链接没有描述  [[链接]]
#+END_EXAMPLE
一旦链接编辑完成，在org模式下，只显示 *描述* 部分，而不会显示整体（后一种是只显示链接）。
为了编辑链接和描述，需要通过快捷键 *C-c C-l* 来完成。
*** 内部链接
内部链接是指向当前文件的链接,它的链接格式:
#+BEGIN_EXAMPLE
[[#链接ID]]
#+END_EXAMPLE
其中 *链接ID* 是文档中唯一的标识ID

*** 外部链接
Org支持的外部链接有很多中形式，如文件、网页、新闻组、电子邮件信息、BBDB数据条目等。
它们以一个短的标识字符串打头，紧接着是一个冒号，冒号后面没有空格字符。

*** 链接处理相关命令

+ org-store-link 保存当前位置的一个链接，以备后面插入使用
+ org-insert-link 插入链接，绑定的快捷键为C-c C-l，如果光标正在一个链接上，那么C-c C-l的行为是编辑这个链接及其描述

* 待办事项
Org模式用来管理自己的TODO list非常方便

* 日程表(Agenda View)
我们可以用Org来按排自己的行程

** 日程文件(Agenda files)
变量org-agenda-files保存了一个文件列表,这些文件用来记录日程，下面是一些操作函数:
C-c [ 将当前文件加入到agenda文件列表最前页面 org-agenda-file-to-front
C-c ] 将当前文件从agenda文件列表中删除 org-remove-file

** 分发按键
默认采用 *C-c a* ,接下的默认的命令有：

+ a   创建一个日程
+ t/T 创建一个TODO items
+ L   对当前文件生成timeline

** 内建Agenda视图

** 计划Schedule
相关命令

+ org-schedule 将当前TODO添加计划时间

* 包列表
1. elisp-slime-nav 写elisp代码时，可用于跳转到函数的定义
